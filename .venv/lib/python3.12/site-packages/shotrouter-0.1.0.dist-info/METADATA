Metadata-Version: 2.4
Name: shotrouter
Version: 0.1.0
Summary: System-wide screenshot router with UI-first design, compliance analyzers, and policy gates.
Author: ShotRouter Team
Requires-Python: >=3.11
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: fastapi>=0.115.0
Requires-Dist: uvicorn[standard]>=0.30.0
Requires-Dist: pydantic>=2.6.0
Dynamic: license-file

# ShotRouter

System‑wide ShotManager that watches OS screenshot folders and routes new screenshots into the right repo or doc store — renamed, audited, and easy to find.

- Native Print Screen flow; no overlays changed.
- UI‑first: local SPA on 127.0.0.1 for Inbox → Approve/Quarantine → Route. CLI is optional for devs.
- Predictable names under `assets/images/`, full audit in SQLite.
- Compliance‑ready: pluggable analyzers (local LLMs, heuristics) and policy gates.
- Cross‑platform plan: Linux, Windows, macOS. Local‑only by default; no uploads.

This repository is a complete design package (docs only) to implement ShotRouter quickly.

## Contents

- docs/overview/WHITEPAPER.md — concept, problems, goals, principles
- docs/architecture/ARCHITECTURE.md — components, algorithms, sequences
- docs/spec/SPEC.md — product requirements and behavior
- docs/config/CONFIG.md — user and repo configuration (TOML)
- docs/api/API.md — local HTTP/WebSocket contract (FastAPI)
- docs/cli/CLI.md — command‑line verbs and UX
- docs/data/DATA_MODEL.md — SQLite schema, indices
- docs/ui/UI.md — UI wireframes and interaction design
- docs/security/SECURITY.md — privacy, trust, compliance
- docs/ops/OPERATIONS.md — run as a service on Linux/Win/macOS
- docs/integrations/INTEGRATIONS.md — VSCode, local LLMs, others
- docs/testing/TESTING.md — test strategy and fixtures
- docs/roadmap/ROADMAP.md — phases and milestones
- docs/todo/TODO.md — concrete task list
- docs/conventions/NAMING.md — filename and directory conventions
 - docs/brand/BRANDING.md — palettes, tokens, theme files (web/Textual)

## TL;DR (How it feels)

- Press Print Screen and capture as usual.
- Item appears in Inbox; analyzers run; you approve or quarantine.
- Approved items route to your target (repo/doc store) under `assets/images` with a clean name.
- Arm next from the UI for one‑shot routing; CLI `shotrouter arm .` is optional.

## Why not just change OS save folders?

- Each OS and desktop handles this differently; GNOME is often locked down, Windows/OneDrive complicates paths, macOS uses defaults that shift.
- ShotRouter leaves capture UX as‑is and solves the discovery, naming, routing, and compliance steps post‑capture.

---

See docs/overview/WHITEPAPER.md to dive in.
